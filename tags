!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Lua	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	1.1	/current.age/
!_TAG_PARSER_VERSION!Lua	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/jowi/Projects/nvim-tag-stack/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.2.0	//
1. Additional Modules	CLAUDE.md	/^### 1. Additional Modules$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Future Extensions
1. Completion Sources	CLAUDE.md	/^### 1. Completion Sources$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Completion System Requirements
1. Dependencies	CLAUDE.md	/^### 1. Dependencies$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Technical Requirements
1. Modular Architecture	CLAUDE.md	/^### 1. Modular Architecture$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Core Functionality Requirements
1. Panel Commands	CLAUDE.md	/^### 1. Panel Commands$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Commands and Keybindings
1. Panel Layout	CLAUDE.md	/^### 1. Panel Layout$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Visualization Requirements
1. Panel Settings	CLAUDE.md	/^### 1. Panel Settings$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Configuration Options
1. Plugin Manager Integration	CLAUDE.md	/^### 1. Plugin Manager Integration$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Installation and Setup
1. Symbol Recognition	CLAUDE.md	/^### 1. Symbol Recognition$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Elixir-Specific Requirements (Tag Stack Module)
2. Completion Settings	CLAUDE.md	/^### 2. Completion Settings$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Configuration Options
2. Enhanced Features	CLAUDE.md	/^### 2. Enhanced Features$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Future Extensions
2. File Structure Awareness	CLAUDE.md	/^### 2. File Structure Awareness$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Elixir-Specific Requirements (Tag Stack Module)
2. Minimal Setup	CLAUDE.md	/^### 2. Minimal Setup$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Installation and Setup
2. Module Commands	CLAUDE.md	/^### 2. Module Commands$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Commands and Keybindings
2. Panel Behavior	CLAUDE.md	/^### 2. Panel Behavior$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Visualization Requirements
2. Performance	CLAUDE.md	/^### 2. Performance$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Technical Requirements
2. Selection Interface	CLAUDE.md	/^### 2. Selection Interface$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Completion System Requirements
2. Tag Stack Module (existing functionality)	CLAUDE.md	/^### 2. Tag Stack Module (existing functionality)$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Core Functionality Requirements
3. Completion Commands	CLAUDE.md	/^### 3. Completion Commands$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Commands and Keybindings
3. Completion Module (new functionality)	CLAUDE.md	/^### 3. Completion Module (new functionality)$/;"	S	section:Context Panel Plugin - Neovim Plugin Requirements""Core Functionality Requirements
Commands	README.md	/^## Commands$/;"	s	chapter:nvim-context-panel
Commands and Keybindings	CLAUDE.md	/^## Commands and Keybindings$/;"	s	chapter:Context Panel Plugin - Neovim Plugin Requirements
Completion Commands	README.md	/^### Completion Commands$/;"	S	section:nvim-context-panel""Commands
Completion System Requirements	CLAUDE.md	/^## Completion System Requirements$/;"	s	chapter:Context Panel Plugin - Neovim Plugin Requirements
Configuration	README.md	/^## Configuration$/;"	s	chapter:nvim-context-panel
Configuration Options	CLAUDE.md	/^## Configuration Options$/;"	s	chapter:Context Panel Plugin - Neovim Plugin Requirements
Context Panel Plugin - Neovim Plugin Requirements	CLAUDE.md	/^# Context Panel Plugin - Neovim Plugin Requirements$/;"	c
Core Functionality Requirements	CLAUDE.md	/^## Core Functionality Requirements$/;"	s	chapter:Context Panel Plugin - Neovim Plugin Requirements
Elixir-Specific Requirements (Tag Stack Module)	CLAUDE.md	/^## Elixir-Specific Requirements (Tag Stack Module)$/;"	s	chapter:Context Panel Plugin - Neovim Plugin Requirements
Error Handling	CLAUDE.md	/^## Error Handling$/;"	s	chapter:Context Panel Plugin - Neovim Plugin Requirements
Features	README.md	/^## Features$/;"	s	chapter:nvim-context-panel
Future Extensions	CLAUDE.md	/^## Future Extensions$/;"	s	chapter:Context Panel Plugin - Neovim Plugin Requirements
Implementation Priority	CLAUDE.md	/^## Implementation Priority$/;"	s	chapter:Context Panel Plugin - Neovim Plugin Requirements
Installation and Setup	CLAUDE.md	/^## Installation and Setup$/;"	s	chapter:Context Panel Plugin - Neovim Plugin Requirements
Module Commands	README.md	/^### Module Commands$/;"	S	section:nvim-context-panel""Commands
Panel Commands	README.md	/^### Panel Commands$/;"	S	section:nvim-context-panel""Commands
Panel Layout	README.md	/^## Panel Layout$/;"	s	chapter:nvim-context-panel
Project Overview	CLAUDE.md	/^## Project Overview$/;"	s	chapter:Context Panel Plugin - Neovim Plugin Requirements
Quick Setup	README.md	/^## Quick Setup$/;"	s	chapter:nvim-context-panel
Requirements	README.md	/^## Requirements$/;"	s	chapter:nvim-context-panel
Smart Completions	README.md	/^### Smart Completions$/;"	S	section:nvim-context-panel""Usage
Tag Stack Navigation	README.md	/^### Tag Stack Navigation$/;"	S	section:nvim-context-panel""Usage
Technical Requirements	CLAUDE.md	/^## Technical Requirements$/;"	s	chapter:Context Panel Plugin - Neovim Plugin Requirements
Usage	README.md	/^## Usage$/;"	s	chapter:nvim-context-panel
Visualization Requirements	CLAUDE.md	/^## Visualization Requirements$/;"	s	chapter:Context Panel Plugin - Neovim Plugin Requirements
apply_highlights	lua/context-panel/init.lua	/^function M.apply_highlights(highlights)$/;"	f	unknown:M
apply_simple_completion	lua/context-panel/completion.lua	/^function M.apply_simple_completion(completion)$/;"	f	unknown:M
apply_text_edit	lua/context-panel/completion.lua	/^function M.apply_text_edit(text_edit)$/;"	f	unknown:M
body	lua/context-panel/completion.lua	/^      body = "${1:value}\\n|> ${2:function}()",$/;"	f
build_preview_content	lua/context-panel/completion.lua	/^function M.build_preview_content(completion)$/;"	f	unknown:M
calculate_panel_config	lua/context-panel/init.lua	/^function M.calculate_panel_config()$/;"	f	unknown:M
callback	lua/context-panel/completion.lua	/^      callback = function()$/;"	f
callback	lua/context-panel/init.lua	/^    callback = function()$/;"	f
callback	lua/context-panel/tag_stack.lua	/^    callback = function()$/;"	f
callback	lua/context-panel/tag_stack.lua	/^    callback = function(ev)$/;"	f
clear	lua/context-panel/tag_stack.lua	/^function M.clear()$/;"	f	unknown:M
clear_completions	lua/context-panel/completion.lua	/^function M.clear_completions()$/;"	f	unknown:M
clear_tag_stack	lua/context-panel/init.lua	/^function M.clear_tag_stack()$/;"	f	unknown:M
create_commands	lua/context-panel/init.lua	/^function M.create_commands()$/;"	f	unknown:M
create_panel	lua/context-panel/init.lua	/^function M.create_panel()$/;"	f	unknown:M
debounced_update	lua/context-panel/init.lua	/^function M.debounced_update(delay)$/;"	f	unknown:M
description	lua/context-panel/completion.lua	/^      description = "Anonymous function"$/;"	f
description	lua/context-panel/completion.lua	/^      description = "Define a function"$/;"	f
description	lua/context-panel/completion.lua	/^      description = "Define a private function"$/;"	f
detect_stack_changes	lua/context-panel/tag_stack.lua	/^function M.detect_stack_changes()$/;"	f	unknown:M
expand_snippet	lua/context-panel/completion.lua	/^function M.expand_snippet(prefix, snippet_text, suffix)$/;"	f	unknown:M
extract_module_from_file	lua/context-panel/tag_stack.lua	/^function M.extract_module_from_file(filepath)$/;"	f	unknown:M
finalize_completions	lua/context-panel/completion.lua	/^  local function finalize_completions()$/;"	f
format_display	lua/context-panel/completion.lua	/^function M.format_display(config)$/;"	f	unknown:M
format_display	lua/context-panel/tag_stack.lua	/^function M.format_display(config)$/;"	f	unknown:M
format_elixir_tag_display	lua/context-panel/tag_stack.lua	/^function M.format_elixir_tag_display(tag_name, item)$/;"	f	unknown:M
get_buffer_completions	lua/context-panel/completion.lua	/^function M.get_buffer_completions(word)$/;"	f	unknown:M
get_completion_kind_icon	lua/context-panel/completion.lua	/^function M.get_completion_kind_icon(kind)$/;"	f	unknown:M
get_enabled_modules	lua/context-panel/init.lua	/^function M.get_enabled_modules()$/;"	f	unknown:M
get_file_path_completions	lua/context-panel/completion.lua	/^function M.get_file_path_completions(word)$/;"	f	unknown:M
get_lsp_completions	lua/context-panel/completion.lua	/^function M.get_lsp_completions(word, callback)$/;"	f	unknown:M
get_panel_config	lua/context-panel/init.lua	/^function M.get_panel_config()$/;"	f	unknown:M
get_snippet_completions	lua/context-panel/completion.lua	/^function M.get_snippet_completions(word)$/;"	f	unknown:M
has_tag_stack	lua/context-panel/tag_stack.lua	/^function M.has_tag_stack()$/;"	f	unknown:M
hide	lua/context-panel/init.lua	/^function M.hide()$/;"	f	unknown:M
hide_preview	lua/context-panel/completion.lua	/^function M.hide_preview()$/;"	f	unknown:M
label	lua/context-panel/completion.lua	/^      label = "anonymous function",$/;"	f
label	lua/context-panel/completion.lua	/^      label = "def function",$/;"	f
label	lua/context-panel/completion.lua	/^      label = "defp private function",$/;"	f
lsp_kind_to_string	lua/context-panel/completion.lua	/^function M.lsp_kind_to_string(kind)$/;"	f	unknown:M
module_name	lua/context-panel/tag_stack.lua	/^  local module_name = filename:gsub("_(%w)", function(letter)$/;"	f
new_stack	lua/context-panel/tag_stack.lua	/^function M.new_stack()$/;"	f	unknown:M
next_stack	lua/context-panel/tag_stack.lua	/^function M.next_stack()$/;"	f	unknown:M
nvim-context-panel	README.md	/^# nvim-context-panel$/;"	c
prev_stack	lua/context-panel/tag_stack.lua	/^function M.prev_stack()$/;"	f	unknown:M
request_update	lua/context-panel/init.lua	/^function M.request_update()$/;"	f	unknown:M
resize_panel	lua/context-panel/init.lua	/^function M.resize_panel()$/;"	f	unknown:M
select_completion	lua/context-panel/completion.lua	/^function M.select_completion(index)$/;"	f	unknown:M
setup	lua/context-panel/completion.lua	/^function M.setup(config)$/;"	f	unknown:M
setup	lua/context-panel/init.lua	/^function M.setup(opts)$/;"	f	unknown:M
setup	lua/context-panel/tag_stack.lua	/^function M.setup(config)$/;"	f	unknown:M
setup_default_keybindings	plugin/context-panel.lua	/^local function setup_default_keybindings()$/;"	f
setup_keybindings	lua/context-panel/completion.lua	/^function M.setup_keybindings(config)$/;"	f	unknown:M
should_auto_show	lua/context-panel/init.lua	/^function M.should_auto_show()$/;"	f	unknown:M
show	lua/context-panel/init.lua	/^function M.show()$/;"	f	unknown:M
show_preview	lua/context-panel/completion.lua	/^function M.show_preview(completion_index)$/;"	f	unknown:M
toggle	lua/context-panel/init.lua	/^function M.toggle()$/;"	f	unknown:M
toggle_module	lua/context-panel/init.lua	/^function M.toggle_module(module_name)$/;"	f	unknown:M
toggle_preview	lua/context-panel/completion.lua	/^function M.toggle_preview()$/;"	f	unknown:M
update_completions	lua/context-panel/completion.lua	/^function M.update_completions(config)$/;"	f	unknown:M
update_display	lua/context-panel/init.lua	/^function M.update_display()$/;"	f	unknown:M
update_timer	lua/context-panel/init.lua	/^  state.update_timer = vim.fn.timer_start(delay, function()$/;"	f	unknown:state
